{{- define "common.deployment" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deploymentName }}
  labels:
    app: {{ .Values.appLabel }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.appLabel }}
  template:
    metadata:
      labels:
        app: {{ .Values.appLabel }}
    spec:
      hostname: {{ .Values.appName }}
      subdomain: {{ .Values.appName }}
      containers:
      - name: {{ .Values.appLabel }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        ports:
        - containerPort: {{ .Values.containerPort }}
          protocol: TCP
        env:
        - name: EUREKA_INSTANCE_HOSTNAME
          value: {{ .Values.appName }}
        - name: EUREKA_INSTANCE_PREFER_IP_ADDRESS
          value: "false"
        {{- if .Values.appname_enabled }}
        - name: SPRING_APPLICATION_NAME
          value: {{ .Values.appName }}
        {{- end }}
        {{- if .Values.profile_enabled }}
        - name: SPRING_PROFILES_ACTIVE
          valueFrom: 
            configMapKeyRef:
              name: {{ .Values.global.configMapName }}
              key: SPRING_PROFILES_ACTIVE
        {{- end }}
        {{- if .Values.discovery_enable }}
        - name: EUREKA_DEFAULT_ZONE
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.global.configMapName }}
              key: EUREKA_DEFAULT_ZONE
        {{- end }}
        {{- if .Values.mongo_host_enable }}
        - name: MONGODB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.global.configMapName }}
              key: MONGODB_HOST
        {{- end }}  
        {{- if .Values.mongo_host_enable }}
        - name: MONGODB_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.global.configMapName }}
              key: MONGODB_PORT
        {{- end }}  
        {{- if .Values.mongo_host_enable }}
        - name: MONGODB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.global.configMapName }}
              key: MONGODB_DATABASE
        {{- end }}        
        {{- if .Values.jwt_enable }}
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.global.configMapName }}
              key: JWT_SECRET
        {{- end }}          
        {{- if .Values.jwt_enable }}
        - name: JWT_EXPIRATION
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.global.configMapName }}
              key: JWT_EXPIRATION
        {{- end }}
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}                                      
{{- end -}}

{{- define "mosquitto.deployment" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mosquitto.deploymentName }}
  labels:
    app: {{ .Values.mosquitto.appLabel }}
spec:
  replicas: {{ .Values.mosquitto.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.mosquitto.appLabel }}
  template:
    metadata:
      labels:
        app: {{ .Values.mosquitto.appLabel }}
    spec:
      securityContext:
        fsGroup: {{ .Values.mosquitto.security.fsGroup }}
        runAsUser: {{ .Values.mosquitto.security.runAsUser }}
        runAsGroup: {{ .Values.mosquitto.security.runAsGroup }}
      containers:
      - name: {{ .Values.mosquitto.appLabel }}
        image: "{{ .Values.mosquitto.image.repository }}:{{ .Values.mosquitto.image.tag }}"
        ports:
        {{- range .Values.mosquitto.ports }}
        - name: {{ .name }}
          containerPort: {{ .containerPort }}
        {{- end }}
        volumeMounts:
        - name: mosquitto-config
          mountPath: /mosquitto/config/mosquitto.conf
          subPath: mosquitto.conf
        - name: mosquitto-passwd
          mountPath: /mosquitto/config/password_file
          subPath: password_file
        - name: mosquitto-data
          mountPath: /mosquitto/data
      volumes:
      - name: mosquitto-config
        configMap:
          name: {{ .Values.mosquitto.deploymentName }}-config
      - name: mosquitto-passwd
        secret:
          secretName: {{ .Values.mosquitto.deploymentName }}-secret
      - name: mosquitto-data
        persistentVolumeClaim:
          claimName: {{ .Values.mosquitto.deploymentName }}-pvc
{{- end -}}